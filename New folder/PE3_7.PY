#Using the various types of indexing prints different parts of python such as p with :1 or starting backwards with :-1
"""
p
y
py
p y py
"""
#This is similar using  ":" which lists the whole word but also uses different seperator /t for spacing between the string
""" 
C
C
C
C       C       C
"""
#by using .upper or lower this changes the output of code resulting in different capitalization like upper makes all letter capitals
"""

Code
CODE
code
coDE

"""
#Changes the varaiable computer science output based on if it says .title which capitalizes the first character of each word. each output of the phrase is seperated by |
"""
Computer Science | computer | com | ienc | ce
Computer Science computer com

"""
#Detects how many i are present using count function, uses index to locate the place of the "s" character in string, rfind used to find p from right side then counted from index

"""
i = 4
s = index[ 2 ]
p =  9
Miss =  -1
"""

#Uses strip function to delete white space, lstrip is for left white space and rstrip is for right white space
"""

lstrip(): Today's program 
rstrip():  Today's program
strip(): Today's program â€“ Basic IO
"""


#Prints first output with default seperator and second output with " " 
"""
Price:  $ 19.99
Price: $19.99
"""

#prints the function with "" space between each string,  /t leading to larger space & /n which prints the string in new line         
"""
Py      th      on
Py
th
on
 """


#Print statement using "-" in between string uses end with " " to indicate a space from that string to add "game starts" to the same line, ends with ! and then starts new line for next string using .upper to uppercase entire statement
"""
tic-tac-toe game starts!
In-Person TUTORING
"""
#Print statement with tab space, does order of operations and converts the numbers from int to str
""" 
Number  Square
2       4
3       9
2        4
3        9
"""

print("STATE\tCAPITAL".expandtabs(15))
print('North Dakota\tBismarck'.expandtabs(15))
print('South Dakota\tPierre'.expandtabs(15))
print('Ohio\tColumbus'.expandtabs(15))
print('North Dakota\tBismarck')
print('South Dakota\tPierre')
print('Ohio\tColumbus')

